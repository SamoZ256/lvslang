//TODO: add overloads

STD_FUNCTION func abs(x: int) -> int;

STD_FUNCTION func acos(x: float) -> float;

STD_FUNCTION func acosh(x: float) -> float;

STD_FUNCTION func asin(x: float) -> float;

STD_FUNCTION func asinh(x: float) -> float;

STD_FUNCTION func atan(x: float) -> float;

STD_FUNCTION func atanh(x: float) -> float;

STD_FUNCTION func ceil(x: float) -> float;

STD_FUNCTION func clamp(x: float, minVal: float, maxVal: float) -> float;

STD_FUNCTION func cos(x: float) -> float;

STD_FUNCTION func cosh(x: float) -> float;

STD_FUNCTION func cross(x: float3, y: float3) -> float3;

STD_FUNCTION func distance(x: float3, y: float3) -> float;

STD_FUNCTION func dot(x: float3, y: float3) -> float;

STD_FUNCTION func exp(x: float) -> float;

STD_FUNCTION func exp2(x: float) -> float;

STD_FUNCTION func floor(x: float) -> float;

STD_FUNCTION func fract(x: float) -> float;

STD_FUNCTION func isinf(x: float) -> bool;

STD_FUNCTION func isnan(x: float) -> bool;

STD_FUNCTION func length(x: float3) -> float;

STD_FUNCTION func log(x: float) -> float;

STD_FUNCTION func log2(x: float) -> float;

STD_FUNCTION func max(x: float, y: float) -> float;

STD_FUNCTION func min(x: float, y: float) -> float;

STD_FUNCTION func mix(x: float, y: float, a: float) -> float;

STD_FUNCTION func normalize(x: float3) -> float3;

STD_FUNCTION func pow(x: float, y: float) -> float;

STD_FUNCTION func reflect(I: float3, N: float3) -> float3;

STD_FUNCTION func refract(I: float3, N: float3, eta: float) -> float3;

STD_FUNCTION func round(x: float) -> float;

STD_FUNCTION func sample(texture: texture2D<float>, samplr: sampler, coord: float2) -> float4;

STD_FUNCTION func sign(x: float) -> float;

STD_FUNCTION func sin(x: float) -> float;

STD_FUNCTION func sinh(x: float) -> float;

STD_FUNCTION func smoothstep(edge0: float, edge1: float, x: float) -> float;

STD_FUNCTION func sqrt(x: float) -> float;

STD_FUNCTION func step(edge: float, x: float) -> float;

STD_FUNCTION func tan(x: float) -> float;

STD_FUNCTION func tanh(x: float) -> float;
