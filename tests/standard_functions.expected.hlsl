struct FragmentOut {
	float4 outColor : SV_Target0;
};

FragmentOut testStandardFunctions(Texture2D testTexture, SamplerState testSampler);

Texture2D testTexture : register(t0);

SamplerState testSampler : register(s0);

struct FragmentOut_Output {
	FragmentOut output : TEXCOORD0;
};

FragmentOut_Output _testStandardFunctions() {
	// Entry point call
	FragmentOut _entryPointOutput = testStandardFunctions(testTexture, testSampler);

	// Output
	FragmentOut_Output __output;
	__output.output = _entryPointOutput;

	return __output;
}

FragmentOut testStandardFunctions(Texture2D testTexture, SamplerState testSampler) {
	int16_t absTestChar = abs(int16_t(0));
	vector<int16_t, 2> absTestChar2 = abs(vector<int16_t, 2>(0, 0));
	vector<int16_t, 3> absTestChar3 = abs(vector<int16_t, 3>(0, 0, 0));
	vector<int16_t, 4> absTestChar4 = abs(vector<int16_t, 4>(0, 0, 0, 0));
	int16_t absTestShort = abs(int16_t(0));
	vector<int16_t, 2> absTestShort2 = abs(vector<int16_t, 2>(0, 0));
	vector<int16_t, 3> absTestShort3 = abs(vector<int16_t, 3>(0, 0, 0));
	vector<int16_t, 4> absTestShort4 = abs(vector<int16_t, 4>(0, 0, 0, 0));
	int absTestInt = abs(int(0));
	int2 absTestInt2 = abs(int2(0, 0));
	int3 absTestInt3 = abs(int3(0, 0, 0));
	int4 absTestInt4 = abs(int4(0, 0, 0, 0));
	half absTestHalf = abs(half(0.000000));
	half2 absTestHalf2 = abs(half2(0.000000, 0.000000));
	half3 absTestHalf3 = abs(half3(0.000000, 0.000000, 0.000000));
	half4 absTestHalf4 = abs(half4(0.000000, 0.000000, 0.000000, 0.000000));
	float absTestFloat = abs(float(0.000000));
	float2 absTestFloat2 = abs(float2(0.000000, 0.000000));
	float3 absTestFloat3 = abs(float3(0.000000, 0.000000, 0.000000));
	float4 absTestFloat4 = abs(float4(0.000000, 0.000000, 0.000000, 0.000000));
	float acosTest = acos(0.000000);
	float acoshTest = acosh(0.000000);
	float asinTest = asin(0.000000);
	float asinhTest = asinh(0.000000);
	float atanTest = atan(0.000000);
	float atanhTest = atanh(0.000000);
	half ceilTestHalf = ceil(half(0.000000));
	half2 ceilTestHalf2 = ceil(half2(0.000000, 0.000000));
	half3 ceilTestHalf3 = ceil(half3(0.000000, 0.000000, 0.000000));
	half4 ceilTestHalf4 = ceil(half4(0.000000, 0.000000, 0.000000, 0.000000));
	float ceilTestFloat = ceil(float(0.000000));
	float2 ceilTestFloat2 = ceil(float2(0.000000, 0.000000));
	float3 ceilTestFloat3 = ceil(float3(0.000000, 0.000000, 0.000000));
	float4 ceilTestFloat4 = ceil(float4(0.000000, 0.000000, 0.000000, 0.000000));
	int16_t clampTestChar = clamp(int16_t(0), int16_t(0), int16_t(0));
	vector<int16_t, 2> clampTestChar2 = clamp(vector<int16_t, 2>(0, 0), vector<int16_t, 2>(0, 0), vector<int16_t, 2>(0, 0));
	vector<int16_t, 3> clampTestChar3 = clamp(vector<int16_t, 3>(0, 0, 0), vector<int16_t, 3>(0, 0, 0), vector<int16_t, 3>(0, 0, 0));
	vector<int16_t, 4> clampTestChar4 = clamp(vector<int16_t, 4>(0, 0, 0, 0), vector<int16_t, 4>(0, 0, 0, 0), vector<int16_t, 4>(0, 0, 0, 0));
	int16_t clampTestShort = clamp(int16_t(0), int16_t(0), int16_t(0));
	vector<int16_t, 2> clampTestShort2 = clamp(vector<int16_t, 2>(0, 0), vector<int16_t, 2>(0, 0), vector<int16_t, 2>(0, 0));
	vector<int16_t, 3> clampTestShort3 = clamp(vector<int16_t, 3>(0, 0, 0), vector<int16_t, 3>(0, 0, 0), vector<int16_t, 3>(0, 0, 0));
	vector<int16_t, 4> clampTestShort4 = clamp(vector<int16_t, 4>(0, 0, 0, 0), vector<int16_t, 4>(0, 0, 0, 0), vector<int16_t, 4>(0, 0, 0, 0));
	int clampTestInt = clamp(int(0), int(0), int(0));
	int2 clampTestInt2 = clamp(int2(0, 0), int2(0, 0), int2(0, 0));
	int3 clampTestInt3 = clamp(int3(0, 0, 0), int3(0, 0, 0), int3(0, 0, 0));
	int4 clampTestInt4 = clamp(int4(0, 0, 0, 0), int4(0, 0, 0, 0), int4(0, 0, 0, 0));
	half clampTestHalf = clamp(half(0.000000), half(0.000000), half(0.000000));
	half2 clampTestHalf2 = clamp(half2(0.000000, 0.000000), half2(0.000000, 0.000000), half2(0.000000, 0.000000));
	half3 clampTestHalf3 = clamp(half3(0.000000, 0.000000, 0.000000), half3(0.000000, 0.000000, 0.000000), half3(0.000000, 0.000000, 0.000000));
	half4 clampTestHalf4 = clamp(half4(0.000000, 0.000000, 0.000000, 0.000000), half4(0.000000, 0.000000, 0.000000, 0.000000), half4(0.000000, 0.000000, 0.000000, 0.000000));
	float clampTestFloat = clamp(float(0.000000), float(0.000000), float(0.000000));
	float2 clampTestFloat2 = clamp(float2(0.000000, 0.000000), float2(0.000000, 0.000000), float2(0.000000, 0.000000));
	float3 clampTestFloat3 = clamp(float3(0.000000, 0.000000, 0.000000), float3(0.000000, 0.000000, 0.000000), float3(0.000000, 0.000000, 0.000000));
	float4 clampTestFloat4 = clamp(float4(0.000000, 0.000000, 0.000000, 0.000000), float4(0.000000, 0.000000, 0.000000, 0.000000), float4(0.000000, 0.000000, 0.000000, 0.000000));
	float cosTest = cos(0.000000);
	float coshTest = cosh(0.000000);
	half3 crossTestHalf3 = cross(half3(0.000000, 0.000000, 0.000000), half3(0.000000, 0.000000, 0.000000));
	float3 crossTestFloat3 = cross(float3(0.000000, 0.000000, 0.000000), float3(0.000000, 0.000000, 0.000000));
	half distanceTestHalf2 = distance(half2(0.000000, 0.000000), half2(0.000000, 0.000000));
	half distanceTestHalf3 = distance(half3(0.000000, 0.000000, 0.000000), half3(0.000000, 0.000000, 0.000000));
	half distanceTestHalf4 = distance(half4(0.000000, 0.000000, 0.000000, 0.000000), half4(0.000000, 0.000000, 0.000000, 0.000000));
	float distanceTestFloat2 = distance(float2(0.000000, 0.000000), float2(0.000000, 0.000000));
	float distanceTestFloat3 = distance(float3(0.000000, 0.000000, 0.000000), float3(0.000000, 0.000000, 0.000000));
	float distanceTestFloat4 = distance(float4(0.000000, 0.000000, 0.000000, 0.000000), float4(0.000000, 0.000000, 0.000000, 0.000000));
	half dotTestHalf2 = dot(half2(0.000000, 0.000000), half2(0.000000, 0.000000));
	half dotTestHalf3 = dot(half3(0.000000, 0.000000, 0.000000), half3(0.000000, 0.000000, 0.000000));
	half dotTestHalf4 = dot(half4(0.000000, 0.000000, 0.000000, 0.000000), half4(0.000000, 0.000000, 0.000000, 0.000000));
	float dotTestFloat2 = dot(float2(0.000000, 0.000000), float2(0.000000, 0.000000));
	float dotTestFloat3 = dot(float3(0.000000, 0.000000, 0.000000), float3(0.000000, 0.000000, 0.000000));
	float dotTestFloat4 = dot(float4(0.000000, 0.000000, 0.000000, 0.000000), float4(0.000000, 0.000000, 0.000000, 0.000000));
	half expTestHalf = exp(half(0.000000));
	half2 expTestHalf2 = exp(half2(0.000000, 0.000000));
	half3 expTestHalf3 = exp(half3(0.000000, 0.000000, 0.000000));
	half4 expTestHalf4 = exp(half4(0.000000, 0.000000, 0.000000, 0.000000));
	float expTestFloat = exp(float(0.000000));
	float2 expTestFloat2 = exp(float2(0.000000, 0.000000));
	float3 expTestFloat3 = exp(float3(0.000000, 0.000000, 0.000000));
	float4 expTestFloat4 = exp(float4(0.000000, 0.000000, 0.000000, 0.000000));
	half exp2TestHalf = exp2(half(0.000000));
	half2 exp2TestHalf2 = exp2(half2(0.000000, 0.000000));
	half3 exp2TestHalf3 = exp2(half3(0.000000, 0.000000, 0.000000));
	half4 exp2TestHalf4 = exp2(half4(0.000000, 0.000000, 0.000000, 0.000000));
	float exp2TestFloat = exp2(float(0.000000));
	float2 exp2TestFloat2 = exp2(float2(0.000000, 0.000000));
	float3 exp2TestFloat3 = exp2(float3(0.000000, 0.000000, 0.000000));
	float4 exp2TestFloat4 = exp2(float4(0.000000, 0.000000, 0.000000, 0.000000));
	half floorTestHalf = floor(half(0.000000));
	half2 floorTestHalf2 = floor(half2(0.000000, 0.000000));
	half3 floorTestHalf3 = floor(half3(0.000000, 0.000000, 0.000000));
	half4 floorTestHalf4 = floor(half4(0.000000, 0.000000, 0.000000, 0.000000));
	float floorTestFloat = floor(float(0.000000));
	float2 floorTestFloat2 = floor(float2(0.000000, 0.000000));
	float3 floorTestFloat3 = floor(float3(0.000000, 0.000000, 0.000000));
	float4 floorTestFloat4 = floor(float4(0.000000, 0.000000, 0.000000, 0.000000));
	half fractTestHalf = fract(half(0.000000));
	half2 fractTestHalf2 = fract(half2(0.000000, 0.000000));
	half3 fractTestHalf3 = fract(half3(0.000000, 0.000000, 0.000000));
	half4 fractTestHalf4 = fract(half4(0.000000, 0.000000, 0.000000, 0.000000));
	float fractTestFloat = fract(float(0.000000));
	float2 fractTestFloat2 = fract(float2(0.000000, 0.000000));
	float3 fractTestFloat3 = fract(float3(0.000000, 0.000000, 0.000000));
	float4 fractTestFloat4 = fract(float4(0.000000, 0.000000, 0.000000, 0.000000));
	bool isinfTestHalf = isinf(half(0.000000));
	bool2 isinfTestHalf2 = isinf(half2(0.000000, 0.000000));
	bool3 isinfTestHalf3 = isinf(half3(0.000000, 0.000000, 0.000000));
	bool4 isinfTestHalf4 = isinf(half4(0.000000, 0.000000, 0.000000, 0.000000));
	bool isinfTestFloat = isinf(float(0.000000));
	bool2 isinfTestFloat2 = isinf(float2(0.000000, 0.000000));
	bool3 isinfTestFloat3 = isinf(float3(0.000000, 0.000000, 0.000000));
	bool4 isinfTestFloat4 = isinf(float4(0.000000, 0.000000, 0.000000, 0.000000));
	bool isnanTestHalf = isnan(half(0.000000));
	bool2 isnanTestHalf2 = isnan(half2(0.000000, 0.000000));
	bool3 isnanTestHalf3 = isnan(half3(0.000000, 0.000000, 0.000000));
	bool4 isnanTestHalf4 = isnan(half4(0.000000, 0.000000, 0.000000, 0.000000));
	bool isnanTestFloat = isnan(float(0.000000));
	bool2 isnanTestFloat2 = isnan(float2(0.000000, 0.000000));
	bool3 isnanTestFloat3 = isnan(float3(0.000000, 0.000000, 0.000000));
	bool4 isnanTestFloat4 = isnan(float4(0.000000, 0.000000, 0.000000, 0.000000));
	half lengthTestHalf2 = length(half2(0.000000, 0.000000));
	half lengthTestHalf3 = length(half3(0.000000, 0.000000, 0.000000));
	half lengthTestHalf4 = length(half4(0.000000, 0.000000, 0.000000, 0.000000));
	float lengthTestFloat2 = length(float2(0.000000, 0.000000));
	float lengthTestFloat3 = length(float3(0.000000, 0.000000, 0.000000));
	float lengthTestFloat4 = length(float4(0.000000, 0.000000, 0.000000, 0.000000));
	half logTestHalf = log(half(0.000000));
	half2 logTestHalf2 = log(half2(0.000000, 0.000000));
	half3 logTestHalf3 = log(half3(0.000000, 0.000000, 0.000000));
	half4 logTestHalf4 = log(half4(0.000000, 0.000000, 0.000000, 0.000000));
	float logTestFloat = log(float(0.000000));
	float2 logTestFloat2 = log(float2(0.000000, 0.000000));
	float3 logTestFloat3 = log(float3(0.000000, 0.000000, 0.000000));
	float4 logTestFloat4 = log(float4(0.000000, 0.000000, 0.000000, 0.000000));
	half log2TestHalf = log2(half(0.000000));
	half2 log2TestHalf2 = log2(half2(0.000000, 0.000000));
	half3 log2TestHalf3 = log2(half3(0.000000, 0.000000, 0.000000));
	half4 log2TestHalf4 = log2(half4(0.000000, 0.000000, 0.000000, 0.000000));
	float log2TestFloat = log2(float(0.000000));
	float2 log2TestFloat2 = log2(float2(0.000000, 0.000000));
	float3 log2TestFloat3 = log2(float3(0.000000, 0.000000, 0.000000));
	float4 log2TestFloat4 = log2(float4(0.000000, 0.000000, 0.000000, 0.000000));
	int16_t maxTestChar = max(int16_t(0), int16_t(0));
	vector<int16_t, 2> maxTestChar2 = max(vector<int16_t, 2>(0, 0), vector<int16_t, 2>(0, 0));
	vector<int16_t, 3> maxTestChar3 = max(vector<int16_t, 3>(0, 0, 0), vector<int16_t, 3>(0, 0, 0));
	vector<int16_t, 4> maxTestChar4 = max(vector<int16_t, 4>(0, 0, 0, 0), vector<int16_t, 4>(0, 0, 0, 0));
	int16_t maxTestShort = max(int16_t(0), int16_t(0));
	vector<int16_t, 2> maxTestShort2 = max(vector<int16_t, 2>(0, 0), vector<int16_t, 2>(0, 0));
	vector<int16_t, 3> maxTestShort3 = max(vector<int16_t, 3>(0, 0, 0), vector<int16_t, 3>(0, 0, 0));
	vector<int16_t, 4> maxTestShort4 = max(vector<int16_t, 4>(0, 0, 0, 0), vector<int16_t, 4>(0, 0, 0, 0));
	int maxTestInt = max(int(0), int(0));
	int2 maxTestInt2 = max(int2(0, 0), int2(0, 0));
	int3 maxTestInt3 = max(int3(0, 0, 0), int3(0, 0, 0));
	int4 maxTestInt4 = max(int4(0, 0, 0, 0), int4(0, 0, 0, 0));
	half maxTestHalf = max(half(0.000000), half(0.000000));
	half2 maxTestHalf2 = max(half2(0.000000, 0.000000), half2(0.000000, 0.000000));
	half3 maxTestHalf3 = max(half3(0.000000, 0.000000, 0.000000), half3(0.000000, 0.000000, 0.000000));
	half4 maxTestHalf4 = max(half4(0.000000, 0.000000, 0.000000, 0.000000), half4(0.000000, 0.000000, 0.000000, 0.000000));
	float maxTestFloat = max(float(0.000000), float(0.000000));
	float2 maxTestFloat2 = max(float2(0.000000, 0.000000), float2(0.000000, 0.000000));
	float3 maxTestFloat3 = max(float3(0.000000, 0.000000, 0.000000), float3(0.000000, 0.000000, 0.000000));
	float4 maxTestFloat4 = max(float4(0.000000, 0.000000, 0.000000, 0.000000), float4(0.000000, 0.000000, 0.000000, 0.000000));
	int16_t minTestChar = min(int16_t(0), int16_t(0));
	vector<int16_t, 2> minTestChar2 = min(vector<int16_t, 2>(0, 0), vector<int16_t, 2>(0, 0));
	vector<int16_t, 3> minTestChar3 = min(vector<int16_t, 3>(0, 0, 0), vector<int16_t, 3>(0, 0, 0));
	vector<int16_t, 4> minTestChar4 = min(vector<int16_t, 4>(0, 0, 0, 0), vector<int16_t, 4>(0, 0, 0, 0));
	int16_t minTestShort = min(int16_t(0), int16_t(0));
	vector<int16_t, 2> minTestShort2 = min(vector<int16_t, 2>(0, 0), vector<int16_t, 2>(0, 0));
	vector<int16_t, 3> minTestShort3 = min(vector<int16_t, 3>(0, 0, 0), vector<int16_t, 3>(0, 0, 0));
	vector<int16_t, 4> minTestShort4 = min(vector<int16_t, 4>(0, 0, 0, 0), vector<int16_t, 4>(0, 0, 0, 0));
	int minTestInt = min(int(0), int(0));
	int2 minTestInt2 = min(int2(0, 0), int2(0, 0));
	int3 minTestInt3 = min(int3(0, 0, 0), int3(0, 0, 0));
	int4 minTestInt4 = min(int4(0, 0, 0, 0), int4(0, 0, 0, 0));
	half minTestHalf = min(half(0.000000), half(0.000000));
	half2 minTestHalf2 = min(half2(0.000000, 0.000000), half2(0.000000, 0.000000));
	half3 minTestHalf3 = min(half3(0.000000, 0.000000, 0.000000), half3(0.000000, 0.000000, 0.000000));
	half4 minTestHalf4 = min(half4(0.000000, 0.000000, 0.000000, 0.000000), half4(0.000000, 0.000000, 0.000000, 0.000000));
	float minTestFloat = min(float(0.000000), float(0.000000));
	float2 minTestFloat2 = min(float2(0.000000, 0.000000), float2(0.000000, 0.000000));
	float3 minTestFloat3 = min(float3(0.000000, 0.000000, 0.000000), float3(0.000000, 0.000000, 0.000000));
	float4 minTestFloat4 = min(float4(0.000000, 0.000000, 0.000000, 0.000000), float4(0.000000, 0.000000, 0.000000, 0.000000));
	half mixTestHalf = mix(half(0.000000), half(0.000000), half(0.000000));
	half2 mixTestHalf2 = mix(half2(0.000000, 0.000000), half2(0.000000, 0.000000), half2(0.000000, 0.000000));
	half3 mixTestHalf3 = mix(half3(0.000000, 0.000000, 0.000000), half3(0.000000, 0.000000, 0.000000), half3(0.000000, 0.000000, 0.000000));
	half4 mixTestHalf4 = mix(half4(0.000000, 0.000000, 0.000000, 0.000000), half4(0.000000, 0.000000, 0.000000, 0.000000), half4(0.000000, 0.000000, 0.000000, 0.000000));
	float mixTestFloat = mix(float(0.000000), float(0.000000), float(0.000000));
	float2 mixTestFloat2 = mix(float2(0.000000, 0.000000), float2(0.000000, 0.000000), float2(0.000000, 0.000000));
	float3 mixTestFloat3 = mix(float3(0.000000, 0.000000, 0.000000), float3(0.000000, 0.000000, 0.000000), float3(0.000000, 0.000000, 0.000000));
	float4 mixTestFloat4 = mix(float4(0.000000, 0.000000, 0.000000, 0.000000), float4(0.000000, 0.000000, 0.000000, 0.000000), float4(0.000000, 0.000000, 0.000000, 0.000000));
	half2 normalizeTestHalf2 = normalize(half2(0.000000, 0.000000));
	half3 normalizeTestHalf3 = normalize(half3(0.000000, 0.000000, 0.000000));
	half4 normalizeTestHalf4 = normalize(half4(0.000000, 0.000000, 0.000000, 0.000000));
	float2 normalizeTestFloat2 = normalize(float2(0.000000, 0.000000));
	float3 normalizeTestFloat3 = normalize(float3(0.000000, 0.000000, 0.000000));
	float4 normalizeTestFloat4 = normalize(float4(0.000000, 0.000000, 0.000000, 0.000000));
	half powTestHalf = pow(half(0.000000), half(0.000000));
	half2 powTestHalf2 = pow(half2(0.000000, 0.000000), half2(0.000000, 0.000000));
	half3 powTestHalf3 = pow(half3(0.000000, 0.000000, 0.000000), half3(0.000000, 0.000000, 0.000000));
	half4 powTestHalf4 = pow(half4(0.000000, 0.000000, 0.000000, 0.000000), half4(0.000000, 0.000000, 0.000000, 0.000000));
	float powTestFloat = pow(float(0.000000), float(0.000000));
	float2 powTestFloat2 = pow(float2(0.000000, 0.000000), float2(0.000000, 0.000000));
	float3 powTestFloat3 = pow(float3(0.000000, 0.000000, 0.000000), float3(0.000000, 0.000000, 0.000000));
	float4 powTestFloat4 = pow(float4(0.000000, 0.000000, 0.000000, 0.000000), float4(0.000000, 0.000000, 0.000000, 0.000000));
	half2 reflectTestHalf2 = reflect(half2(0.000000, 0.000000), half2(0.000000, 0.000000));
	half3 reflectTestHalf3 = reflect(half3(0.000000, 0.000000, 0.000000), half3(0.000000, 0.000000, 0.000000));
	half4 reflectTestHalf4 = reflect(half4(0.000000, 0.000000, 0.000000, 0.000000), half4(0.000000, 0.000000, 0.000000, 0.000000));
	float2 reflectTestFloat2 = reflect(float2(0.000000, 0.000000), float2(0.000000, 0.000000));
	float3 reflectTestFloat3 = reflect(float3(0.000000, 0.000000, 0.000000), float3(0.000000, 0.000000, 0.000000));
	float4 reflectTestFloat4 = reflect(float4(0.000000, 0.000000, 0.000000, 0.000000), float4(0.000000, 0.000000, 0.000000, 0.000000));
	half2 refractTestHalf2 = refract(half2(0.000000, 0.000000), half2(0.000000, 0.000000), half(0.000000));
	half3 refractTestHalf3 = refract(half3(0.000000, 0.000000, 0.000000), half3(0.000000, 0.000000, 0.000000), half(0.000000));
	half4 refractTestHalf4 = refract(half4(0.000000, 0.000000, 0.000000, 0.000000), half4(0.000000, 0.000000, 0.000000, 0.000000), half(0.000000));
	float2 refractTestFloat2 = refract(float2(0.000000, 0.000000), float2(0.000000, 0.000000), float(0.000000));
	float3 refractTestFloat3 = refract(float3(0.000000, 0.000000, 0.000000), float3(0.000000, 0.000000, 0.000000), float(0.000000));
	float4 refractTestFloat4 = refract(float4(0.000000, 0.000000, 0.000000, 0.000000), float4(0.000000, 0.000000, 0.000000, 0.000000), float(0.000000));
	half roundTestHalf = round(half(0.000000));
	half2 roundTestHalf2 = round(half2(0.000000, 0.000000));
	half3 roundTestHalf3 = round(half3(0.000000, 0.000000, 0.000000));
	half4 roundTestHalf4 = round(half4(0.000000, 0.000000, 0.000000, 0.000000));
	float roundTestFloat = round(float(0.000000));
	float2 roundTestFloat2 = round(float2(0.000000, 0.000000));
	float3 roundTestFloat3 = round(float3(0.000000, 0.000000, 0.000000));
	float4 roundTestFloat4 = round(float4(0.000000, 0.000000, 0.000000, 0.000000));
	float4 sampleTest = testTexture.SampleLevel(testSampler, float2(0.000000, 0.000000), 0.0f);
	int16_t signTestChar = sign(int16_t(0));
	vector<int16_t, 2> signTestChar2 = sign(vector<int16_t, 2>(0, 0));
	vector<int16_t, 3> signTestChar3 = sign(vector<int16_t, 3>(0, 0, 0));
	vector<int16_t, 4> signTestChar4 = sign(vector<int16_t, 4>(0, 0, 0, 0));
	int16_t signTestShort = sign(int16_t(0));
	vector<int16_t, 2> signTestShort2 = sign(vector<int16_t, 2>(0, 0));
	vector<int16_t, 3> signTestShort3 = sign(vector<int16_t, 3>(0, 0, 0));
	vector<int16_t, 4> signTestShort4 = sign(vector<int16_t, 4>(0, 0, 0, 0));
	int signTestInt = sign(int(0));
	int2 signTestInt2 = sign(int2(0, 0));
	int3 signTestInt3 = sign(int3(0, 0, 0));
	int4 signTestInt4 = sign(int4(0, 0, 0, 0));
	half signTestHalf = sign(half(0.000000));
	half2 signTestHalf2 = sign(half2(0.000000, 0.000000));
	half3 signTestHalf3 = sign(half3(0.000000, 0.000000, 0.000000));
	half4 signTestHalf4 = sign(half4(0.000000, 0.000000, 0.000000, 0.000000));
	float signTestFloat = sign(float(0.000000));
	float2 signTestFloat2 = sign(float2(0.000000, 0.000000));
	float3 signTestFloat3 = sign(float3(0.000000, 0.000000, 0.000000));
	float4 signTestFloat4 = sign(float4(0.000000, 0.000000, 0.000000, 0.000000));
	float sinTest = sin(0.000000);
	float sinhTest = sinh(0.000000);
	half smoothstepTestHalf = smoothstep(half(0.000000), half(0.000000), half(0.000000));
	half2 smoothstepTestHalf2 = smoothstep(half2(0.000000, 0.000000), half2(0.000000, 0.000000), half2(0.000000, 0.000000));
	half3 smoothstepTestHalf3 = smoothstep(half3(0.000000, 0.000000, 0.000000), half3(0.000000, 0.000000, 0.000000), half3(0.000000, 0.000000, 0.000000));
	half4 smoothstepTestHalf4 = smoothstep(half4(0.000000, 0.000000, 0.000000, 0.000000), half4(0.000000, 0.000000, 0.000000, 0.000000), half4(0.000000, 0.000000, 0.000000, 0.000000));
	float smoothstepTestFloat = smoothstep(float(0.000000), float(0.000000), float(0.000000));
	float2 smoothstepTestFloat2 = smoothstep(float2(0.000000, 0.000000), float2(0.000000, 0.000000), float2(0.000000, 0.000000));
	float3 smoothstepTestFloat3 = smoothstep(float3(0.000000, 0.000000, 0.000000), float3(0.000000, 0.000000, 0.000000), float3(0.000000, 0.000000, 0.000000));
	float4 smoothstepTestFloat4 = smoothstep(float4(0.000000, 0.000000, 0.000000, 0.000000), float4(0.000000, 0.000000, 0.000000, 0.000000), float4(0.000000, 0.000000, 0.000000, 0.000000));
	half sqrtTestHalf = sqrt(half(0.000000));
	half2 sqrtTestHalf2 = sqrt(half2(0.000000, 0.000000));
	half3 sqrtTestHalf3 = sqrt(half3(0.000000, 0.000000, 0.000000));
	half4 sqrtTestHalf4 = sqrt(half4(0.000000, 0.000000, 0.000000, 0.000000));
	float sqrtTestFloat = sqrt(float(0.000000));
	float2 sqrtTestFloat2 = sqrt(float2(0.000000, 0.000000));
	float3 sqrtTestFloat3 = sqrt(float3(0.000000, 0.000000, 0.000000));
	float4 sqrtTestFloat4 = sqrt(float4(0.000000, 0.000000, 0.000000, 0.000000));
	half stepTestHalf = step(half(0.000000), half(0.000000));
	half2 stepTestHalf2 = step(half2(0.000000, 0.000000), half2(0.000000, 0.000000));
	half3 stepTestHalf3 = step(half3(0.000000, 0.000000, 0.000000), half3(0.000000, 0.000000, 0.000000));
	half4 stepTestHalf4 = step(half4(0.000000, 0.000000, 0.000000, 0.000000), half4(0.000000, 0.000000, 0.000000, 0.000000));
	float stepTestFloat = step(float(0.000000), float(0.000000));
	float2 stepTestFloat2 = step(float2(0.000000, 0.000000), float2(0.000000, 0.000000));
	float3 stepTestFloat3 = step(float3(0.000000, 0.000000, 0.000000), float3(0.000000, 0.000000, 0.000000));
	float4 stepTestFloat4 = step(float4(0.000000, 0.000000, 0.000000, 0.000000), float4(0.000000, 0.000000, 0.000000, 0.000000));
	float tanTest = tan(0.000000);
	float tanhTest = tanh(0.000000);
	FragmentOut fragmentOut;
	fragmentOut.outColor = float4(0.000000, 0.000000, 0.000000, 1.000000);
	return fragmentOut;
}

